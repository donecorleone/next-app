"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./app/components/ScrollEffect.js":
/*!****************************************!*\
  !*** ./app/components/ScrollEffect.js ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nvar _s = $RefreshSig$();\n\nfunction ScrollEffect() {\n    _s();\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        // Dynamically import the libraries\n        // Split and animate text\n        handleTextAnimation(gsap, ScrollTrigger);\n        // Handle hero animations\n        handleHeroAnimations(gsap, ScrollTrigger);\n        // Handle service animations\n        // handleServiceAnimations(gsap, ScrollTrigger);\n        // Handle portfolio animations\n        // handlePortfolioAnimations(gsap, ScrollTrigger);\n        // Handle background color change\n        handleBackgroundColorChange(gsap, ScrollTrigger);\n        handleInfotextAnimation(gsap, ScrollTrigger);\n    });\n    return null;\n}\n_s(ScrollEffect, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ScrollEffect;\nfunction handleTextAnimation(gsap1, ScrollTrigger1) {\n    const splitText = new SplitType(\"#split-text\");\n    gsap1.to(\".char\", {\n        y: 0,\n        stagger: 0.02,\n        delay: 0.1,\n        duration: .01,\n        scrollTrigger: {\n            trigger: \".service-overview\",\n            start: \"top center\",\n            toggleActions: \"play none none reverse\"\n        }\n    });\n}\nfunction handleHeroAnimations(gsap1, ScrollTrigger1) {\n    const heroTimeline = gsap1.timeline({\n        scrollTrigger: {\n            trigger: \".service-overview\",\n            start: \"top center\",\n            toggleActions: \"play none none reverse\"\n        }\n    });\n    heroTimeline.to(\"img\", {\n        clipPath: \"polygon(0 0, 100% 0, 100% 100%, 0 100%)\",\n        scale: 1.1,\n        duration: 0.7\n    });\n}\nfunction handleInfotextAnimation(gsap1, ScrollTrigger1) {\n    const splitTypeText = document.querySelectorAll(\".info-text\");\n    splitTypeText.forEach((char, i)=>{\n        const textAnimation = new SplitType(char, {\n            types: \"chars\"\n        });\n        gsap1.from(textAnimation.chars, {\n            scrollTrigger: {\n                trigger: char,\n                start: \"top 80%\",\n                end: \"top 30%\",\n                scrub: true,\n                once: true\n            },\n            opacity: 0.2,\n            stagger: 0.1\n        });\n    });\n}\n// function handleServiceAnimations(gsap, ScrollTrigger) {\n//     const serviceContainerTimeline = gsap.timeline({ paused: true });\n//     serviceContainerTimeline.to(\".service-border\", {\n//         width: \"100%\",\n//         duration: 2,\n//         ease: \"power4.out\",\n//     });\n//     const serviceItemTimeline = gsap.timeline({ paused: true });\n//     serviceItemTimeline.to(\".service-item-border\", {\n//         width: \"100%\",\n//         duration: 1.5,\n//         ease: \"power4.out\",\n//     });\n//     ScrollTrigger.create({\n//         trigger: \".service-container\",\n//         start: \"top 80%\",\n//         onEnter: () => {\n//             serviceContainerTimeline.play();\n//         },\n//     });\n//     serviceContainerTimeline.call(() => {\n//         serviceItemTimeline.play();\n//     });\n// }\n// function handlePortfolioAnimations(gsap, ScrollTrigger) {\n//     const portfolioAnimations = [\n//         { selector: \"#portfolio-1, #portfolio-4\", y: -50 },\n//         { selector: \"#portfolio-2, #portfolio-5\", y: -100 },\n//         { selector: \"#portfolio-3, #portfolio-6\", y: -150 }\n//     ];\n//     portfolioAnimations.forEach(animation => {\n//         gsap.from(animation.selector, {\n//             duration: 2,\n//             y: animation.y,\n//             yPercent: 0,\n//             scrollTrigger: {\n//                 trigger: '.work-container',\n//                 start: 'top center',\n//                 end: 'bottom center',\n//                 scrub: 1.5\n//             }\n//         });\n//     });\n// }\nfunction handleBackgroundColorChange(gsap1, ScrollTrigger1) {\n    // ScrollTrigger for background color change\n    const textContainer = document.querySelector(\".text-containerr\");\n    const portfolioContainer = document.querySelector(\".portfolio-container\");\n    ScrollTrigger1.create({\n        trigger: textContainer,\n        start: \"top center\",\n        end: \"bottom center\",\n        onEnter: ()=>{\n            gsap1.to(\"main\", {\n                backgroundColor: \"#121212\",\n                color: \"#fff\"\n            });\n        },\n        onLeave: ()=>{\n            gsap1.to(\"main\", {\n                backgroundColor: \"#fff\",\n                color: \"#121212\",\n                duration: 1\n            });\n        },\n        onEnterBack: ()=>{\n            gsap1.to(\"main\", {\n                backgroundColor: \"#121212\",\n                color: \"#fff\",\n                duration: 1\n            });\n        }\n    });\n    ScrollTrigger1.create({\n        trigger: portfolioContainer,\n        start: \"top center\",\n        end: \"bottom center\",\n        onEnter: ()=>{\n            gsap1.to(\"main\", {\n                backgroundColor: \"#fff\",\n                color: \"#121212\",\n                duration: 1\n            });\n        },\n        onLeaveBack: ()=>{\n            gsap1.to(\"main\", {\n                backgroundColor: \"#121212\",\n                color: \"#fff\",\n                duration: 1\n            });\n        }\n    });\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (ScrollEffect);\nvar _c;\n$RefreshReg$(_c, \"ScrollEffect\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./app/components/ScrollEffect.js\n"));

/***/ })

});